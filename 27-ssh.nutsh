lesson_name("Aus der Ferne arbeiten mit SSH")
make_home

"In dieser Lektion sollen Sie lernen, wie Sie sich aus der Ferne
auf Systemen anmelden können und mit diesen über SSH Dateien
austauschen können."

"Um sich auf entfernten Rechnern anzumelden kann der Befehl ´ssh
username@rechneradresse:port´ benutzt werden. Probieren Sie mal, sich auf den
SSH-Server des Rechenzentrums zu verbinden.  Die Adresse ist
`rzloginlx.rz.tu-bs.de`, Ihre `y-Nummer` ist der Benutzername, die Portangabe
können Sie weglassen.  Führen Sie ein paar Befehle aus, beenden Sie danach die
Verbindung mit `exit`."

/*
"Mit `echo fertig` geht es weiter"

prompt {
    if ready {
        expect("echo fertig")
        break
    }
}


"Damit Sie sich auf einen entfernten Rechner mit ssh verbinden können muss 
auf diesem ein SSH Server laufen und Sie über passende Daten zur Authentifizierung verfügen."

"Probieren Sie nun, sich auf den Rechner `vorkurs.ddns.me` als
User `vorkurs` mit Passwort `vorkurs` anzumelden. Legen Sie 
eine Datei im Homeverzeichnis auf dem Server an, die genauso heißt wie Ihr lokaler
Nutzer (z.B. Ihre y-Nummer)."

"Mit `echo fertig` geht es weiter"

prompt {
    if ready {
        run("rm /tmp/"+user)
        run(`scp -i $ROOT/vorkurs_rsa vorkurs@vorkurs.ddns.me:/home/vorkurs/`+user+` /tmp`)
        if file("/tmp/"+user) {
            expect(`ssh -o StrictHostKeyChecking=no -i $ROOT/vorkurs_rsa vorkurs@vorkurs.ddns.me "touch $USER;exit";echo fertig`)
            break
        }
    }
}

"Um Dateien mit dem entfernten Rechner auszutauschen gibt es das Programm `scp`.
Mit diesem können Dateien vom lokalen auf den entfernten Rechner und umgekehrt kopiert werden.
`scp pfad1 pfad2` kopiert eine Datei."

"Pfadangaben für den entfernten Rechner sind dabei folgendermaßen aufgebaut: `user@server:port:pfad`"
"Um z. B. die lokale Datei `foobar` im aktuellen Ordner als User `vorkurs` in dessen `Home-Ordner` auf dem Server `vorkurs.ddns.me`
zu kopieren lautet der scp-Befehl `scp foobar vorkurs@vorkurs.ddns.me:/home/vorkurs`."

"Probieren Sie mal, die Datei `secret`, die im Ordner `/home/vorkurs/data` auf dem Server `vorkurs.ddns.me` als User `vorkurs` (PW: vorkurs)
in Ihren aktuellen lokalen Ordner zu kopieren."

prompt {
        expect(`scp -i $ROOT/vorkurs_rsa vorkurs@vorkurs.ddns.me:/home/vorkurs/data/secret .`)
        if file("secret") && run(`cat secret`) =~ `.*Abelian grape.*`  {
            break
        }
}

"Man kann sich nicht nur mit einem Passwort als Benutzer authentifizieren, sondern auch über Schlüssel.
Dies ermöglicht z.B. das Authentifizieren ohne Passwort oder das Abschalten der Passwordauthentifizierung,
um Brute-Force-Angriffe auf Benutzerpasswörter zu verhindern."

if ! file("$HOME/.ssh/id_rsa") {
    "Erstellen Sie sich mit dem Befehl `ssh-keygen -t rsa` einen Schlüssel. Bei den Fragen können Sie jeweils *Enter* drücken."

    prompt {
            if file("$HOME/.ssh/id_rsa") {
                // Since this is conditional, don't expect anything
                // expect(`yes "" | ssh-keygen -t rsa`)
                break
            }
    }
}

"In Ihrem lokalen Heimatverzeichnis gibt es ein Verzeichnis `.ssh` in welchem Ihr Schlüssel liegt. Wechseln Sie dort doch mal hin."
prompt {
        if in("$HOME/.ssh") {
            expect(`cd ~/.ssh`)
            break
        }
}

"`ssh-keygen` hat zwei Dateien erzeugt:"
"`id_rsa` ist Ihr privater Schlüssel, der Sie authentifiziert. Diesen sollten Sie geheim halten!"
"`id_rsa.pub` ist Ihr öffentlicher Schlüssel. Dieser Schlüssel muss der Gegenstelle, mit der Sie kommunizieren wollen, bekannt gemacht werden."

"Noch lässt sich der Schlüssel nicht nutzen, erst muss dem Server klar gemacht werden, dass dies ein zulässiger Schlüssel für den entfernten Benutzer ist.
Kopieren Sie zuerst mit `scp` Ihren öffentlichen Schlüssel nach `/home/vorkurs/.ssh/id_user` (ersetzen Sie nur `user` durch Ihren `lokalen Benutzernamen`) 
auf dem Server `vorkurs.ddns.me` als User `vorkurs` (PW: vorkurs)"

prompt {
    expect(`scp -i $ROOT/vorkurs_rsa $HOME/.ssh/id_rsa.pub vorkurs@vorkurs.ddns.me:/home/vorkurs/.ssh/id_$USER`)
    run(`scp -i $ROOT/vorkurs_rsa vorkurs@vorkurs.ddns.me:/home/vorkurs/.ssh/id_$USER $HOME/.ssh/`)
    if file(`$HOME/.ssh/id_$USER`) && runs(`cmp $HOME/.ssh/id_rsa.pub $HOME/.ssh/id_$USER`) {
        break
    }
}

"Nun müssen Sie Ihren Schlüsel noch als authorisiert markieren. Loggen Sie sich dazu mit ssh auf dem Server `vorkurs.ddns.me` als User `vorkurs` (PW: vorkurs) ein."
"Wechseln Sie dann in den Ordner `~/.ssh` und hängen Sie Ihren öffentlichen Schlüssel an die Datei `authorized_keys` (z.B. mit `cat IhreSchlüsseldatei >> authorized_keys`, 
darauf achten `>>` zu verwenden und nicht `>`)"
"Mit `echo fertig` geht es weiter."

prompt {
    if ready {
        expect(`ssh  -i $ROOT/vorkurs_rsa vorkurs@vorkurs.ddns.me "cd .ssh;cat id_$USER >> authorized_keys;exit";echo fertig`)
        run(`scp -i $ROOT/vorkurs_rsa vorkurs@vorkurs.ddns.me:/home/vorkurs/.ssh/authorized_keys $ROOT`)
        if file(`$ROOT/authorized_keys`) && runs(`grep -v -f ~/.ssh/id_rsa.pub $ROOT/authorized_keys`) {
            break
        }
    }
}

"Zum Abschluss der Lektion können Sie nochmal ausprobieren, sich nochmal mit `ssh` auf dem Server anzumelden.
Sie sollten nun nicht mehr nach dem Userpasswort sondern nach dem Schlüsselpasswort gefragt werden, wenn Sie eines gesetzt haben."

"Übrigens können Sie auf dem Server mit dem Befehl `w` nachsehen, was die anderen Vorkursteilnehmer gerade so machen ;-)"
*/

"Mit `echo fertig` beenden Sie die Lektion."

prompt {
    if ready {
        expect("echo fertig")
        break
    }
}
