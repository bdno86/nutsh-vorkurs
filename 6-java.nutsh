lesson_name("Java")
make_home

// sorry! :-(
run(`echo -e 'public class Selection {\n    public static void main(String[] args) {\n        int[] a = {1337, -23, 42};\n        int i = 0;\n        while (i < a.length) {\n            System.out.print(a[i]);\n            System.out.print(" ");\n            i = i + 1;\n        }\n        System.out.println();\n        int pos_sort = 0,\n            min,\n            pos_min;\n        while (pos_sort < a.length) {\n            min = a[pos_sort];\n            pos_min = pos_sort;\n            int l = pos_sort+1;\n            while (l < a.length) {\n                if (a[l] < min) {\n                    min = a[l];\n                    pos_min = l;\n                }\n                l = l + 1;\n            }\n            int tmp = a[pos_sort];\n            a[pos_sort] = min;\n            a[pos_min] = tmp;\n            pos_sort = pos_sort+1;\n        }\n        i = 0;\n        while (i < a.length) {\n            System.out.print(a[i]);\n            System.out.print(" ");\n            i = i + 1;}\n        System.out.println();\n    }\n}\n' > küche/esszimmer/Selection.java`)

"Heute probieren wir schon einmal kurz aus, wie man ein Programm in Java schreibt und ausführt."

"In Ihrem Esszimmer (wohin man von der Küche aus kommt) finden Sie den Quellcode eines Java-Programms. Sehen Sie sich diese Datei mit einem Texteditor Ihrer Wahl einmal an (Sie müssen die Details noch nicht verstehen) und signalisieren Sie mit `echo fertig`, wenn Sie weitermachen möchten."

prompt {
    if ready {
        if run("pwd") == run(`echo "$ROOT/küche/esszimmer"`) {
            expect("cd küche/esszimmer; echo fertig")
            break
        }
        expect("echo fertig")
        "Bitte gehen Sie zu der .java-Datei im Esszimmer."
    }
}

"Um aus der Quelldatei ein lauffähiges Programm zu machen, gibt es den Befehl `javac` (Java compiler), der einfach als Argument die .java-Datei bekommt."

prompt {
    say(file("Selection.class")+" und "+file("fu.class"))
    say(dir(".."))
    if file("Selection.class") {
        expect("javac Selection.java")
        break
    }
}

"`javac` hat eine neue Datei namens `Selection.class` erstellt - dieses Programm kann man nun mit dem Befehl `java` starten - als Argument gibt man den Namen der Datei *vor dem Punkt* an."

prompt {
    if command =~ "java\s+Selection" {
        expect("java Selection")
        break
    }
}

"Das Programm sortiert eine Liste von Zahlen (mithilfe von Selection Sort). Die erste Zeile der Ausgabe ist die unsortierte Liste, die zweite Zeile ist sortiert."

"Öffnen Sie die .java-Datei und fügen Sie in der dritten Zeile einige zusätzliche, durch Kommas getrennte ganze Zahlen hinzu. Dann führen Sie wie zuvor `javac` und `java` aus."

prompt {
    if command =~ "java\s+Selection" {
        if ! (output =~ "(?m)^-23 42 1337$") {
            expect(`sed -i '3s/{.*}/{3,2,1,99}/' Selection.java; javac Selection.java; java Selection`)
            break
        } else {
            expect("java Selection")
            "Das sind noch die gleichen Zahlen wie vorher - haben Sie die Liste geändert und das Programm neu übersetzt?"
        }
    }
}

"Genau. Mit `echo fertig` schließen Sie die Lektion ab."

prompt {
    if ready {
        expect("echo fertig")
        break
    }
}
